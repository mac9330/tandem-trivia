{"version":3,"sources":["components/navbar.jsx","components/question.jsx","components/trivia.jsx","App.jsx","reducers/root_reducer.js","reducers/questions_reducer.js","index.js","store/store.js"],"names":["Navigation","Navbar","sticky","className","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","href","icon","faLinkedin","faAngellist","faGithub","Divider","faReadme","Link","React","Component","Question","props","state","currentQuestion","count","handleSubmit","bind","generateAnswers","generateQuestion","this","questions","question","correct","answers","incorrect","push","shuffle","array","sort","Math","random","e","preventDefault","currentTarget","value","correctAnswer","setState","window","location","reload","length","Button","block","variant","size","onClick","handleRefresh","map","answer","idx","Trivia","json","slice","entities","action","Object","freeze","type","store","preloadedState","createStore","rootReducer","applyMiddleware","thunk","configureStore","rootElement","document","getElementById","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.5acd923f.chunk.js","sourcesContent":["import React from \"react\"\nimport { faLinkedin, faAngellist, faGithub, faReadme } from \"@fortawesome/free-brands-svg-icons\";\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\n\n\n\n\n\nclass Navigation extends React.Component {\n\nrender() {\n    return(\n            <>\n        <Navbar\n          sticky=\"top\"\n          className=\"w-100 navbar navbar-dark bg-secondary mb-1\"\n        >\n          <Navbar.Brand className=\"main-title\">Tandem Trivia</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <NavDropdown title=\"Mackenzie Young\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"https://www.linkedin.com/in/mackenzie-young-296787189/\">\n                  <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://angel.co/u/mac-young-1\">\n                  <FontAwesomeIcon icon={faAngellist} /> AngelList\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://github.com/mac9330\">\n                  <FontAwesomeIcon icon={faGithub} /> Github\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"https://mac9330.github.io/\">\n                  <FontAwesomeIcon icon={faReadme} /> Portfolio-Site\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav.Link\n              href=\"https://github.com/mac9330/tandem-trivia\"\n              className=\" nav text-white\"\n            >\n              ReadMe <FontAwesomeIcon icon={faReadme} />\n            </Nav.Link>\n          </Navbar.Collapse>\n        </Navbar>\n        </>\n        )\n    }\n}\n\nexport default Navigation;\n","import React from \"react\"\nimport {Button, ButtonGroup} from \"react-bootstrap\";\n\n\nclass Question extends React.Component {\n    constructor(props) {\n            super(props)\n\n            this.state = {\n                currentQuestion: 0,\n                count: 0,\n            }\n            this.handleSubmit = this.handleSubmit.bind(this)\n            this.generateAnswers = this.generateAnswers.bind(this)\n            this.generateQuestion = this.generateQuestion.bind(this)\n        }\n\n    generateQuestion() {\n        return this.props.questions[this.state.currentQuestion].question\n    }\n\n    generateAnswers() {\n        let correct = this.props.questions[this.state.currentQuestion].correct\n        let answers = this.props.questions[this.state.currentQuestion].incorrect\n        answers.push(correct)\n        return this.shuffle(answers)\n    }\n\n    shuffle(array) {\n        return array.sort(() => Math.random() - 0.5);\n    }\n\n    correctAnswer() {\n        return this.props.questions[this.state.currentQuestion].correct\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        if (e.currentTarget.value === this.correctAnswer()) this.setState({count: this.state.count + 1})\n        await this.setState({currentQuestion: this.state.currentQuestion + 1})\n    }\n\n    handleRefresh() {\n        window.location.reload(true)\n    }\n\n        \n        render() {\n            return this.state.currentQuestion === this.props.questions.length ? (\n                <div>\n                    <h1 className=\"ml-5 mt-5 display-one text-muted\">Congrats You Scored: {this.state.count} / {this.props.questions.length}</h1>\n                    <Button block variant=\"secondary\" size=\"md\" className=\"display-one my-3 w-50 ml-5 py-3\" onClick={() => this.handleRefresh()}>Try Again?</Button>\n                </div>\n            ) : (\n                <div>\n                    <div className=\"card w-3 mb-3\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title text-muted\">Current Score</h5>\n                            <p className=\"card-text text-muted\">{this.state.count}</p>\n                        </div>\n                    </div>\n                   <h1 className=\"text-muted ml-5 display-one\">{this.props.questions[this.state.currentQuestion].question}</h1>\n                        {this.generateAnswers().map((answer, idx) => {\n                            return <Button block variant=\"secondary\" size=\"md\" className=\"display-one my-3 w-50 ml-5 py-3\" onClick={this.handleSubmit} value={answer} key={idx}>{answer}</Button>\n                        })}\n                </div>\n        )\n    }\n}\nexport default Question","import React from \"react\"\nimport json from \"../data/Apprentice_TandemFor400_Data.json\"\nimport Question from \"./question\";\n\n\nclass Trivia extends React.Component {\n    constructor(props) {\n            super(props)\n\n            this.state = {\n                questions: this.shuffle(json),\n                count: 0,\n\n            }\n        }\n\n    shuffle(array) {\n        return array.sort(() => Math.random() - 0.5).slice(0, 10);\n    }\n\n        \n        render() {\n            return (\n                <div>\n                   <Question questions={this.state.questions} count={this.state.count} />\n                </div>\n        )\n    }\n}\nexport default Trivia\n// export default connect(msp, mdp)(Trivia);","import 'bootstrap/dist/css/bootstrap.min.css';\n/* eslint-disable import/no-anonymous-default-export */\nimport Navbar from \"./components/navbar\"\nimport Trivia from \"./components/trivia\"\nexport default () => (\n    <div>\n          <Navbar/>\n          <Trivia/>\n    </div>\n);\n","import entities from \"./questions_reducer\"\n\n// import {combineReducers} from \"react-redux\"\n\nexport default entities","\n// import merge from 'lodash.merge'\n\n\nconst QuestionsReducer = (state = {}, action) => {\n    Object.freeze(state);\n    // const newState = merge({}, state); \n    \n    switch(action.type) {\n        default: \n            return state;\n    }\n}\n\nexport default QuestionsReducer;\n\n\n// const entitiesReducer = combineReducers({users, spots, reviews, reservations });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/store'\n\nconst store = configureStore();\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n\n","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/root_reducer.js\";\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nconst configureStore = (preloadedState = {}) => createStore(rootReducer, preloadedState, applyMiddleware(thunk));\nexport default configureStore;"],"sourceRoot":""}